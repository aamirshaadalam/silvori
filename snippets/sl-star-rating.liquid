{% liquid
  assign min = min | default: 1
  assign max = max | default: 5
  assign rating = rating | append: '' | times: 1
  assign count = count | default: 0
  assign fill = fill | default: '#000000'

  assign whole_number = rating | floor
  assign fraction_part = rating | minus: whole_number

  if fraction_part < 0.3
    assign adjusted_fraction = 0
  elsif fraction_part >= 0.3 and fraction_part <= 0.7
    assign adjusted_fraction = 0.5
  else
    assign adjusted_fraction = 1
  endif

  assign adjusted_rating = whole_number | plus: adjusted_fraction
%}

<div class="flex gap-1 items-center">
  <div class="flex gap-1">
    {% for i in (min..max) %}
      {% if i <= adjusted_rating %}
        {% comment %} Full Star {% endcomment %}
        <svg
          fill="{{ fill }}"
          stroke-width="0"
          viewBox="0 0 35.088 35.088"
          class="size-6"
        >
          <path stroke-linecap="round" stroke-linejoin="round" d="M34.921,14.075l-8.87,7.93l2.517,11.628c0.042,0.193-0.035,0.394-0.195,0.511c-0.087,0.062-0.189,0.097-0.294,0.097 c-0.086,0-0.173-0.022-0.251-0.067l-10.284-5.986L7.26,34.172c-0.172,0.099-0.385,0.088-0.545-0.028 c-0.16-0.115-0.236-0.314-0.194-0.51l2.515-11.628l-8.87-7.93c-0.147-0.134-0.203-0.341-0.142-0.527 c0.061-0.188,0.228-0.322,0.425-0.343l11.837-1.201l4.8-10.887c0.16-0.361,0.755-0.361,0.915,0l4.799,10.887l11.838,1.201 c0.196,0.021,0.363,0.152,0.426,0.343C35.124,13.735,35.068,13.94,34.921,14.075z"></path>
        </svg>
      {% else %}
        {% assign ceil_rating = adjusted_rating | ceil %}
        {% if i <= ceil_rating %}
          {% comment %} half star {% endcomment %}
          <svg
            fill="{{ fill }}"
            stroke-width="0"
            viewBox="0 0 36.09 36.09"
            class="size-6"
            transform="matrix(-1, 0, 0, 1, 0, 0)"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M36.041,13.907c-0.123-0.377-0.456-0.646-0.85-0.687l-11.549-1.172L18.96,1.431c-0.16-0.364-0.519-0.598-0.915-0.598 s-0.755,0.234-0.915,0.598l-4.683,10.618L0.899,13.221c-0.394,0.04-0.728,0.31-0.85,0.688c-0.123,0.377-0.011,0.791,0.285,1.055 l8.653,7.736L6.534,34.044c-0.083,0.387,0.069,0.787,0.39,1.021c0.322,0.231,0.75,0.254,1.091,0.056l10.031-5.839l10.031,5.839 c0.156,0.091,0.33,0.136,0.503,0.136c0.207,0,0.413-0.064,0.588-0.191c0.32-0.23,0.474-0.633,0.391-1.02L27.105,22.7l8.652-7.737 C36.052,14.698,36.164,14.284,36.041,13.907z M8.968,32.249l2.097-9.696c0.076-0.352-0.043-0.717-0.311-0.956l-7.396-6.613 l9.871-1.002c0.358-0.035,0.669-0.263,0.814-0.592l3.503-7.943v21.812c-0.001,0-0.002,0-0.003,0.001L8.968,32.249z"></path>
          </svg>
        {% else %}
          {% comment %} empty star {% endcomment %}
          <svg
            fill="{{ fill }}"
            stroke-width="0"
            viewBox="0 0 36.09 36.09"
            class="size-6"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M36.042,13.909c-0.123-0.377-0.456-0.646-0.85-0.688l-11.549-1.172L18.96,1.43c-0.16-0.36-0.519-0.596-0.915-0.596 s-0.755,0.234-0.915,0.598L12.446,12.05L0.899,13.221c-0.394,0.04-0.728,0.312-0.85,0.688c-0.123,0.377-0.011,0.791,0.285,1.055 l8.652,7.738L6.533,34.045c-0.083,0.387,0.069,0.787,0.39,1.02c0.175,0.127,0.381,0.191,0.588,0.191 c0.173,0,0.347-0.045,0.503-0.137l10.032-5.84l10.03,5.84c0.342,0.197,0.77,0.178,1.091-0.059c0.32-0.229,0.474-0.633,0.391-1.02 l-2.453-11.344l8.653-7.737C36.052,14.699,36.165,14.285,36.042,13.909z M25.336,21.598c-0.268,0.24-0.387,0.605-0.311,0.957 l2.097,9.695l-8.574-4.99c-0.311-0.182-0.695-0.182-1.006,0l-8.576,4.99l2.097-9.695c0.076-0.352-0.043-0.717-0.311-0.957 l-7.396-6.613l9.87-1.002c0.358-0.035,0.668-0.264,0.814-0.592l4.004-9.077l4.003,9.077c0.146,0.328,0.456,0.557,0.814,0.592 l9.87,1.002L25.336,21.598z"></path>
          </svg>
        {% endif %}
      {% endif %}
    {% endfor %}
  </div>
  <span class="text-xl font-medium">({{ count }})</span>
</div>
